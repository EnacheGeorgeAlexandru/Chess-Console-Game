<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\</FILEPATH>
      <FILENAME>Player.h</FILENAME>
      <LINE>25</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Chess::Player::currentMovePtr' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Chess::Player::{ctor}</FUNCTION>
    <DECORATED>??0Player@Chess@@QEAA@XZ</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Chess::Player::currentMovePtr</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>King.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::King::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@King@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>King.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::King::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@King@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>King.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::King::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@King@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>King.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::King::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@King@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\User\source\repos\Chess-Console-Game\Chess\Pieces\</FILEPATH>
      <FILENAME>Pawn.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Chess::Pieces::Pawn::legalMoves</FUNCTION>
    <DECORATED>?legalMoves@Pawn@Pieces@Chess@@UEBA?AV?$list@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBVBoard@3@AEBU?$pair@HH@5@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>